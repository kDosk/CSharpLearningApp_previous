using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace CSharpLearningApp
{
    /// <summary>
    /// Логика взаимодействия для Page1Teoriya.xaml
    /// </summary>
    public partial class Page1Teoriya : Page
    {
        public Page1Teoriya()
        {
            InitializeComponent();
            TexstBlockTexstss.Text = "В C# определение метода состоит из любых модификаторов (таких как спецификация доступности), " +
                " типа возвращаемого значения, " +
                " за которым следует имя метода," +
                " затем список аргументов в круглых скобках и далее - тело метода" +
                "Классы представляют связанные между собой объекты. " +
                " К ним могут относится const, int и другие. " +
                " Служат для хранения электронных материалов. Но такие «составляющие кода» способны содержать функции." +
                " Функции, которые определяются в пределах класса – это и есть методы C#. Они могут быть прописаны как внутри, так и за пределами class" +
                " Метод – блок кода, который содержит в себе ряд инструкций и указаний. " +
                " Программа рассматривает его в качестве инструкций – метод вызывается, после чего указываются все его аргументы." +
                " Программа инициирует выполнение инструкций, вызывая метод и указывая все аргументы, необходимые для этого метода. " +
                " В C# все инструкции выполняются в контексте метода." +
                " Обязательными элементами для определения метода в C# являются: " +
                " тип возвращаемого значения и имя метода. " +
                " Самый первый пример метода, который мы могли видеть в C# — это метод Main(), который является и точкой входа для нашего консольного приложения." +
                " static — это модификатор. О том, что он обозначает, мы поговорим позднее, когда доберемся до работы с классами и объектами в C#." +
                " void — тип возвращаемого значения. Это ключевое слово используется для того, чтобы указать, что метод не возвращает ничего." +
                " Main — это имя метода." +
                " string[] args— это единственный параметр метода — массив строк." +
                " Каждый параметр состоит из имени типа параметра и имени, по которому к нему можно обратиться в теле метода. " +
                " Вдобавок, если метод возвращает значение, то для указания точки выхода должен использоваться оператор возврата return вместе с возвращаемым значением." +
                " Если метод не возвращает ничего, то в качестве типа возврата указывается void, поскольку вообще опустить тип возврата невозможно." +
                " Если же он не принимает аргументов, то все равно после имени метода должны присутствовать пустые круглые скобки. " +
                " При этом включать в тело метода оператор возврата не обязательно — метод возвращает управление автоматически по достижении закрывающей фигурной скобки.";
        }

        private void ButtonExit_Click(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new mainpage());
        }

        private void TestButton_Click(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new Test1());
        }
    }
}
