using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace CSharpLearningApp.Liniza
{
    /// <summary>
    /// Логика взаимодействия для Page2Teoriya.xaml
    /// </summary>
    public partial class Page2Teoriya : Page
    {
        public Page2Teoriya()
        {
            InitializeComponent();
            TexstBlockTexstss1.Text = "Все три метода вызываются в основном методе программы – Main. " +
                " Они имеют модификатор доступа static. " +
                " Первые два метода типа void, то есть ничего не возвращают." +
                " PrintHelloWorld – вызывает Console.WriteLine с текстовым аргументом." +
                " PrintHello – принимает в качестве аргумента текстовую строку и после модификации текста, передает его в другой метод Console.WriteLine, который выводит текст в консоль." +
                " Cube – принимает на вход целое число, возводит его в куб и возвращает результат." +
                "Вызов метода – это переход в начало его тела и превращение параметров в локальные переменные с инициализацией их значениями соответствующих аргументов. " +
                " Метод выполняет до своего конца или до инструкции return. " +
                " После выполнения мы возвращаемся в точку его вызова. " +
                " Если мы укажем в качестве возвращаемого значения void, то можем не использовать return, " +
                " а если будем использовать то должны это делать без значения так, как указали что он ничего не возвращает." +
                " Метод может называть себя. Это называется рекурсией." +
                " При вызове метода мы переходим в его тело и начинаем выполнять вложенные в него инструкции. " +
                " Для вызова нам нужно применить к его имени оператор вызова, который представляется круглыми скобками." +
                " Внутри этого оператора через запятую мы перечисляем аргументы метода, те данные которые он от нас требует." +
                " Помимо этого, метод может возвращать данные, которые в языковых конструкциях воспринимаются как результат выполнения оператора вызова. " +
                " Так что вызов метода можно встретить в самых неожиданных местах." +
                " Чаще всего в классе присутствует один или несколько методов. Каждый из них выполняет определенное действие. " +
                " Методами они называются потому, что именно в них описывается метод выполнения действий – пошаговые инструкции, задающие порядок выполнения операций." +
                " Строка, начинающаяся с двух символов \"слеш\" (//), называется комментарием. Комментарии только поясняют код, но не влияют на выполнение программы." +
                " Операция \"+\" определена над строками. " +
                " Она называется сцеплением строк, или конкатенацией. " +
                " Результатом операции является приписывание второй строки в конец первой." +
                " Как уже говорилось, объекты класса Person могут объявляться и создаваться в методах другого класса." +
                " Когда встречается вызов метода ShowFullName, " +
                " компьютер находит в классе Person метод с таким именем и – шаг за шагом – выполняет описанные в нем действия.";
        }
        private void ButtonExit_Click(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new mainpage());
        }

        private void TestButton_Click(object sender, RoutedEventArgs e)
        {
            NavigationService.Navigate(new Test2());
        }
    }
}
